// ADD R - 1110_000_0100_0_AAAA_DDDD_0000_0000_BBBB
// ADD I - 1110_001_0100_0_AAAA_DDDD_0000_IIII_IIII
// SUB R - 1110_000_0010_0_AAAA_DDDD_0000_0000_BBBB
// SUB I - 1110_001_0010_0_AAAA_DDDD_0000_IIII_IIII
// AND   - 1110_000_0000_0_AAAA_DDDD_0000_0000_BBBB
// ORR   - 1110_000_1100_0_AAAA_DDDD_0000_0000_BBBB
// LDR   - 1110_010_1100_1_AAAA_DDDD_IIII_IIII_IIII
// STR   - 1110_010_1100_0_AAAA_DDDD_IIII_IIII_IIII
// B     - 1110_1010_IIII_IIII_IIII_IIII_IIII_IIII


1110_001_0100_0_1111_0000_0000_0000_0000 // MAIN		ADD R0, R15, #0		    0
1110_000_0010_0_0000_0001_0000_0000_0000 // 		    SUB R1, R0, R0		    4
1110_001_0100_0_0001_0010_0000_0000_1010 // 		    ADD R2, R1, #10         8
1110_000_0100_0_0000_0011_0000_0000_0010 // 		    ADD R3, R0, R2		    12
1110_001_0010_0_0010_0100_0000_0000_0011 // 		    SUB R4, R2, #3		    16
1110_000_0010_0_0011_0101_0000_0000_0100 // 		    SUB R5, R3, R4		    20
1110_000_1100_0_0100_0110_0000_0000_0101 // 		    ORR R6, R4, R5		    24
1110_000_0000_0_0110_0111_0000_0000_0101 // 		    AND R7, R6, R5		    28
1110_010_1100_0_0001_0111_0000_0000_0000 // 		    STR R7, [R1, #0]	    32
1110_1010_0000_0000_0000_0000_0000_0001  // 		    B SKIP                  36
1110_010_1100_0_0001_0001_0000_0000_0000 // 		    STR R1, [R1, #0]        40
1110_1010_0000_0000_0000_0000_0000_0000  // 		    B LOOP	                44 
1110_010_1100_1_0001_1000_0000_0000_0000 // SKIP		LDR R8, [R1, #0]	    48
1110_1010_1111_1111_1111_1111_1111_1110  // LOOP		B LOOP                  52